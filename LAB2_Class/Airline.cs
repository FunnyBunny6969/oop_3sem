using System;
using System.Collections.Generic;
using System.Linq;

// –ß–∞—Å—Ç–∏—á–Ω—ã–π –∫–ª–∞—Å—Å - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
public partial class Airline
{
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –ü–æ–ª—è –∫–ª–∞—Å—Å–∞ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–∫—Ä—ã—Ç—ã–º–∏) + –ø–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è + –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    private string _destination;          // –ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    private string _flightNumber;         // –ù–æ–º–µ—Ä —Ä–µ–π—Å–∞
    private string _aircraftType;         // –¢–∏–ø —Å–∞–º–æ–ª–µ—Ç–∞
    private TimeSpan _departureTime;      // –í—Ä–µ–º—è –≤—ã–ª–µ—Ç–∞
    private DayOfWeek[] _daysOfWeek;      // –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    
    // –ü–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è (—É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö—ç—à–∞) - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public readonly int ID;
    
    // –ü–æ–ª–µ-–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    private const string AIRLINE_COMPANY = "AeroFlot";
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    private static int _objectsCount = 0;
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∞–≤–∏–∞–ª–∏–Ω–∏–π
    private static List<Airline> _allAirlines = new List<Airline>();

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç–∏–ø–∞)
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    static Airline()
    {
        Console.WriteLine("‚ñì –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Airline –≤—ã–∑–≤–∞–Ω - –∫–ª–∞—Å—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
        Console.WriteLine($"‚ñì –ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {AIRLINE_COMPANY}");
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –ù–µ –º–µ–Ω–µ–µ —Ç—Ä–µ—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ + –∑–∞–∫—Ä—ã—Ç—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public Airline()
    {
        _destination = "Unknown";
        _flightNumber = "AF000";
        _aircraftType = "Boeing 737";
        _departureTime = new TimeSpan(12, 0, 0);
        _daysOfWeek = new DayOfWeek[] { DayOfWeek.Monday };
        
        // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö—ç—à–∞ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
        ID = CalculateHashCode();
        _objectsCount++;
        _allAirlines.Add(this);
        
        Console.WriteLine($"‚úì –°–æ–∑–¥–∞–Ω —Ä–µ–π—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {this}");
    }

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public Airline(string destination, string flightNumber, string aircraftType, 
                   TimeSpan departureTime, DayOfWeek[] daysOfWeek)
    {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞
        if (string.IsNullOrWhiteSpace(destination))
            throw new ArgumentException("–ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
        if (string.IsNullOrWhiteSpace(flightNumber))
            throw new ArgumentException("–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
        if (daysOfWeek == null || daysOfWeek.Length == 0)
            throw new ArgumentException("–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏");

        _destination = destination;
        _flightNumber = flightNumber;
        _aircraftType = aircraftType;
        _departureTime = departureTime;
        _daysOfWeek = daysOfWeek;
        
        ID = CalculateHashCode();
        _objectsCount++;
        _allAirlines.Add(this);
        
        Console.WriteLine($"‚úì –°–æ–∑–¥–∞–Ω —Ä–µ–π—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: {this}");
    }

    // –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public Airline(string destination, string flightNumber) 
        : this(destination, flightNumber, "Airbus A320", 
              new TimeSpan(10, 30, 0), 
              new DayOfWeek[] { DayOfWeek.Monday, DayOfWeek.Friday })
    {
        Console.WriteLine($"‚úì –°–æ–∑–¥–∞–Ω —Ä–µ–π—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {this}");
    }

    // –ó–∞–∫—Ä—ã—Ç—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    private Airline(string destination, TimeSpan departureTime)
    {
        _destination = destination;
        _flightNumber = "PRIVATE001";
        _aircraftType = "Private Jet";
        _departureTime = departureTime;
        _daysOfWeek = new DayOfWeek[] { DayOfWeek.Sunday };
        
        ID = CalculateHashCode();
        _objectsCount++;
        _allAirlines.Add(this);
        
        Console.WriteLine($"üîí –°–æ–∑–¥–∞–Ω —Ä–µ–π—Å —á–µ—Ä–µ–∑ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä: {this}");
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –°–≤–æ–π—Å—Ç–≤–∞ (get, set) —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ + –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ set
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    // –°–≤–æ–π—Å—Ç–≤–æ —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º
    public string Destination
    {
        get => _destination;
        set
        {
            if (string.IsNullOrWhiteSpace(value))
                throw new ArgumentException("–ü—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
            _destination = value;
        }
    }

    // –°–≤–æ–π—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ set (—Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑–≤–Ω–µ) - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public string FlightNumber
    {
        get => _flightNumber;
        private set   // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –ø–æ set - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
        {
            if (string.IsNullOrWhiteSpace(value))
                throw new ArgumentException("–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
            _flightNumber = value;
        }
    }

    public string AircraftType
    {
        get => _aircraftType;
        set => _aircraftType = value ?? "Unknown Aircraft";
    }

    public TimeSpan DepartureTime
    {
        get => _departureTime;
        set => _departureTime = value;
    }

    public DayOfWeek[] DaysOfWeek
    {
        get => _daysOfWeek;
        set
        {
            if (value == null || value.Length == 0)
                throw new ArgumentException("–î–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–∫–∞–∑–∞–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏");
            _daysOfWeek = value;
        }
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    public static void PrintClassInfo()
    {
        Console.WriteLine("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
        Console.WriteLine("‚ïë         –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–õ–ê–°–°–ï         ‚ïë");
        Console.WriteLine("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
        Console.WriteLine($"‚ïë –ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è: {AIRLINE_COMPANY,-20} ‚ïë");
        Console.WriteLine($"‚ïë –°–æ–∑–¥–∞–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤: {_objectsCount,-16} ‚ïë");
        Console.WriteLine($"‚ïë –í—Å–µ–≥–æ —Ä–µ–π—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {_allAirlines.Count,-9} ‚ïë");
        Console.WriteLine("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –ú–µ—Ç–æ–¥ —Å ref –∏ out –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    public bool TryUpdateFlightInfo(ref string newFlightNumber, out string errorMessage)
    {
        errorMessage = null;
        
        // ref –ø–∞—Ä–∞–º–µ—Ç—Ä - –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        if (string.IsNullOrWhiteSpace(newFlightNumber))
        {
            newFlightNumber = "DEFAULT001"; // –∏–∑–º–µ–Ω—è–µ–º ref –ø–∞—Ä–∞–º–µ—Ç—Ä
            errorMessage = "–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ –±—ã–ª –ø—É—Å—Ç—ã–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é";
            return false;
        }

        // out –ø–∞—Ä–∞–º–µ—Ç—Ä - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if (newFlightNumber.Length < 3)
        {
            errorMessage = "–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π";
            return false;
        }

        this.FlightNumber = newFlightNumber;
        errorMessage = "–†–µ–π—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω";
        return true;
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –∫–ª–∞—Å—Å–∞ Object
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Equals –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public override bool Equals(object obj)
    {
        if (obj is Airline other)
        {
            return _flightNumber == other._flightNumber && 
                   _destination == other._destination &&
                   _departureTime == other._departureTime;
        }
        return false;
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ GetHashCode - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public override int GetHashCode()
    {
        return CalculateHashCode();
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ö—ç—à–∞
    private int CalculateHashCode()
    {
        unchecked
        {
            int hash = 17;
            hash = hash * 23 + (_destination?.GetHashCode() ?? 0);
            hash = hash * 23 + (_flightNumber?.GetHashCode() ?? 0);
            hash = hash * 23 + _departureTime.GetHashCode();
            return hash;
        }
    }

    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ ToString - –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä–µ–∫—Ç–µ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    public override string ToString()
    {
        string days = string.Join(", ", _daysOfWeek.Select(d => d.ToString()));
        return $"–†–µ–π—Å {_flightNumber} ‚Üí {_destination} | {_aircraftType} | {_departureTime:hh\\:mm} | –î–Ω–∏: {days} | ID: {ID}";
    }

    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    // –í–û–ü–†–û–°: –í–∞—Ä–∏–∞–Ω—Ç—ã –≤—ã–∑–æ–≤–∞ –∑–∞–∫—Ä—ã—Ç–æ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
    // ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    public static Airline CreatePrivateFlight(string destination, TimeSpan time)
    {
        return new Airline(destination, time);
    }

    // –§–∞–±—Ä–∏—á–Ω—ã–π –º–µ—Ç–æ–¥
    public static Airline CreateCharterFlight(string destination)
    {
        return new Airline(destination, new TimeSpan(18, 0, 0));
    }
}

// ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
// –í–û–ü–†–û–°: Partial –∫–ª–∞—Å—Å (–≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å)
// ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà

public partial class Airline
{
    // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤ - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    
    // a) –°–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    public static List<Airline> GetFlightsByDestination(string destination)
    {
        return _allAirlines
            .Where(airline => airline.Destination.Equals(destination, StringComparison.OrdinalIgnoreCase))
            .ToList();
    }

    // b) –°–ø–∏—Å–æ–∫ —Ä–µ–π—Å–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
    public static List<Airline> GetFlightsByDay(DayOfWeek day)
    {
        return _allAirlines
            .Where(airline => airline.DaysOfWeek.Contains(day))
            .ToList();
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ä–µ–π—Å–æ–≤
    public static List<Airline> GetAllFlights()
    {
        return new List<Airline>(_allAirlines);
    }
}
